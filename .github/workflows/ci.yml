name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run linting
      run: |
        flake8 src/ tests/
        pylint src/ --disable=C0114,C0115,C0116,R0903 --exit-zero
    
    - name: Run type checking
      run: |
        mypy src/ --ignore-missing-imports
    
    - name: Run security checks
      run: |
        # Check for hardcoded secrets
        ! grep -r "sk-\|api_key.*=.*['\"]" src/ --include="*.py" || exit 1
        # Run bandit
        bandit -r src/ -ll
        # Check dependencies
        safety check || true  # Don't fail on known issues
    
    - name: Run unit tests
      run: |
        pytest tests/test_*.py -v --cov=src --cov-report=xml -k "not integration"
    
    - name: Run integration tests
      run: |
        pytest tests/test_integration*.py -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy-check:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Validate deployment files
      run: |
        # Check if deployment script exists
        test -f deployment/deploy_to_gcp.sh
        
        # Check if required files exist
        test -f requirements.txt
        test -f .env.example
        test -f src/main.py
        
    - name: Check Google Cloud compatibility
      run: |
        # Install dependencies
        pip install -r requirements.txt
        
        # Try importing main function
        python -c "from src.main import main_function; print('Import successful')"